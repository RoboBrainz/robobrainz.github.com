<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>RoboBrainz (nikola)</title><link>/</link><description></description><atom:link href="/categories/nikola.xml" type="application/rss+xml" rel="self"></atom:link><language>en</language><lastBuildDate>Sun, 19 Apr 2015 00:51:21 GMT</lastBuildDate><generator>http://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Ordering Robot Parts</title><link>/posts/ordering-robot-parts/</link><dc:creator>pengor</dc:creator><description>&lt;div&gt;&lt;p&gt;On Tuesday we ordered the first set of parts for the robot from &lt;a href="https://www.sparkfun.com/"&gt;SparkFun Electronics&lt;/a&gt;, enough to get the robot moving. The only necessary component that we didn't purchase was an Arduino microcontroller, which we already have in our possession. Along with this board we went with a fairly basic robot design favoring simplicity when possible. The order consisted of:&lt;br&gt;
* 1 &lt;a href="https://www.sparkfun.com/products/12089"&gt;Multi-Chassis - 4WD Kit (Basic)&lt;/a&gt; - A rectangular chassis that has four independently-motorized wheels&lt;br&gt;
* 2 &lt;a href="https://www.sparkfun.com/products/9457"&gt;Motor Driver 1A Dual TB6612FNG&lt;/a&gt; - The intermediaries between the microcontroller (essentially the robot's brain) and the motors&lt;br&gt;
* 1 &lt;a href="https://www.sparkfun.com/products/12999"&gt;5 Pack of 5mm Addressable RGB LEDs&lt;/a&gt; - These will be used for debugging and user-feedback, different colors representing different messages&lt;br&gt;
* 1 &lt;a href="https://www.sparkfun.com/products/710"&gt;Graphic LCD 128x64&lt;/a&gt; - Mostly just tacked this on to get free shipping, but it could wind up in the project if we want another form of output&lt;/p&gt;
&lt;p&gt;We're excited to get working on the hardware, but first up is preparing for our requirements presentation on next Thursday!&lt;/p&gt;&lt;/div&gt;</description><category>emotiv</category><category>faculty meeting</category><category>linux</category><category>nikola</category><category>requirements</category><category>robot</category><category>robot parts</category><category>sdk</category><guid>/posts/ordering-robot-parts/</guid><pubDate>Thu, 23 Oct 2014 23:40:58 GMT</pubDate></item><item><title>Advisor Meeting 1</title><link>/posts/advisor-meeting-1/</link><dc:creator>phora</dc:creator><description>&lt;div&gt;&lt;p&gt;We met with our advisor today from 10:20-10:50 and reported our progress. Here were the major points of the meeting:&lt;/p&gt;
&lt;h2 id="joan"&gt;Joan&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Packaged the Fedora version of the Research SDK for Arch Linux.&lt;/li&gt;
&lt;li&gt;Found the most of the dependencies for the SDK. Still don't know what package provides libmkl_rt.&lt;/li&gt;
&lt;li&gt;Emailed the support team about the packaging of the SDK so the developer team could fix this.&lt;/li&gt;
&lt;li&gt;There's a fake data generator in the SDK lite for Windows and Mac (That's free!). So try to find the equivalent in the Linux SDK version.&lt;/li&gt;
&lt;li&gt;Finish work on not referencing the static copies of the library when possible.&lt;/li&gt;
&lt;li&gt;Found a bug in nikola\plugins\task\sitemap__init__.py. It wasn't checking if directories were directories in a cross-platform manner. Will report this to the developers with an official patch.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="drew"&gt;Drew&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Order the parts from SparkFun.&lt;/li&gt;
&lt;li&gt;Chassis has built in motors.&lt;/li&gt;
&lt;li&gt;We may need a separate shield for driving the wheels?&lt;/li&gt;
&lt;li&gt;Probably going to drive the motors with DC.&lt;/li&gt;
&lt;li&gt;Settled on multicolor LEDs because single color LEDs can get confusing for debugging.&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</description><category>emotiv</category><category>faculty meeting</category><category>linux</category><category>nikola</category><category>requirements</category><category>robot</category><category>robot parts</category><category>sdk</category><guid>/posts/advisor-meeting-1/</guid><pubDate>Mon, 20 Oct 2014 17:59:13 GMT</pubDate></item><item><title>Setting up Nikola on PLU computers</title><link>/posts/setting-up-nikola-on-plu-computers/</link><dc:creator>phora</dc:creator><description>&lt;div&gt;&lt;p&gt;We set up our site for our github page last night using a Linux computer that already had nikola installed. Since we also needed to work on the site at school, we also had to set nikola up on school computers. To do this, we had to run the following commands:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Install most of the dependencies using pip&lt;br&gt;
&lt;code&gt;\Python34\Scripts\pip install --root=/path/to/destdir nikola&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Install nikola using the &lt;a href="https://github.com/getnikola/nikola"&gt;github version&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/a/23397327"&gt;Edit C:\Python34\Lib\distutils\msvc9compiler.py at line 294 to hardcode 12.0 as the MSVC version&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/a/6035864"&gt;Remove all instances of -mcygwin from C:\Python34\Lib\distutils\cygwinccompiler.py&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Install lxml using &lt;a href="http://lxml.de/installation.html"&gt;the official instructions for MS Windows&lt;/a&gt; and specify the path to install like in step 1.&lt;/li&gt;
&lt;li&gt;Install blinker, six, markupsafe, logbook, natsort, yapsy, and pyrss2gen manually with pip&lt;/li&gt;
&lt;li&gt;Construct a shell script file to automagically set environment variables to make manually copying nikola to a location where the executable can be run a lot less painful (as in, no need to type out extremely long path names): &lt;/li&gt;
&lt;/ol&gt;
&lt;pre class="code literal-block"&gt;if test -d /cygdrive;then
    #export PYPREFIX="/cygdrive/x/Apps/pylibs"
    export PYPREFIX="/cygdrive/c/Users/PLUCSCE/Downloads/pylibs"
else
    #export PYPREFIX="/x/Apps/pylibs"
    export PYPREFIX="/c/Users/PLUCSCE/Downloads/pylibs"
fi

export PYTHONPATH="&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;PYPREFIX&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;/Python34:&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;PYPREFIX&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;/Python34/lib:&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;PYPREFIX&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;/Python34/lib/site-packages"
export PATH="&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;PYPREFIX&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;/Python34/Scripts:&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;PATH&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;"
&lt;/pre&gt;


&lt;p&gt;With the installation complete, all we had to do was keep a copy on our x drives before copying it to the Downloads folder and source the script file before continuing to work with our site.&lt;/p&gt;&lt;/div&gt;</description><category>PLU computers</category><category>nikola</category><category>python</category><category>python3</category><guid>/posts/setting-up-nikola-on-plu-computers/</guid><pubDate>Thu, 09 Oct 2014 23:38:18 GMT</pubDate></item></channel></rss>