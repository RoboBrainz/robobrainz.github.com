<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0"><channel><title>RoboBrainz (emotiv)</title><link>/</link><description></description><atom:link rel="self" type="application/rss+xml" href="/categories/emotiv.xml"></atom:link><language>en</language><lastBuildDate>Tue, 02 Dec 2014 14:21:03 GMT</lastBuildDate><generator>http://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Test EDK program mostly compiles so far</title><link>/posts/test-edk-program-mostly-compiles-so-far/</link><dc:creator>phora</dc:creator><description>&lt;div&gt;&lt;p&gt;[EDIT]: It is now working! See &lt;a href="https://github.com/RoboBrainz/Test-EmoSDK/commit/32beedfc483208c4be261b2dd0704a7fb0e22b30"&gt;this commit&lt;/a&gt; for how we did it.&lt;/p&gt;
&lt;p&gt;While we were working on our homework, I decided to try writing a test program that would simply. A lot of the code is just copied from &lt;code&gt;/opt/EmotivResearch_2.0.0.20/doc/examples_Qt/example1/main.cpp&lt;/code&gt;. The Makefile for the program was written from scratch. Here were the instructions I ran to compile it.&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span class="n"&gt;make&lt;/span&gt; &lt;span class="n"&gt;clean&lt;/span&gt;
&lt;span class="n"&gt;env&lt;/span&gt; &lt;span class="n"&gt;LD_LIBRARY_PATH&lt;/span&gt;&lt;span class="o"&gt;=/&lt;/span&gt;&lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;EmotivResearch_2&lt;/span&gt;&lt;span class="mf"&gt;.0.0.20&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt; &lt;span class="n"&gt;make&lt;/span&gt;
&lt;span class="n"&gt;env&lt;/span&gt; &lt;span class="n"&gt;LD_LIBRARY_PATH&lt;/span&gt;&lt;span class="o"&gt;=/&lt;/span&gt;&lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;EmotivResearch_2&lt;/span&gt;&lt;span class="mf"&gt;.0.0.20&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;
&lt;/pre&gt;


&lt;p&gt;Running the second of the former commands produces the following output:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;g&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;EmotivResearch_2&lt;/span&gt;&lt;span class="mf"&gt;.0.0.20&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;include&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;EmotivResearch_2&lt;/span&gt;&lt;span class="mf"&gt;.0.0.20&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt; &lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;intel&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;composer_xe_2015&lt;/span&gt;&lt;span class="mf"&gt;.0.090&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;compiler&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;intel64&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;intel&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;composer_xe_2015&lt;/span&gt;&lt;span class="mf"&gt;.0.090&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;mkl&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;intel64&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;lcryptopp_64&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ludev&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;lmkl_rt&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;liomp5&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;lboost_serialization&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;lboost_system&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;lboost_regex&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;lboost_filesystem&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;lpng12&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;lQtCore&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;lQtGui&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ledk_utils_linux&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ledk&lt;/span&gt; 
&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ld&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;warning&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;libboost_serialization&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;so&lt;/span&gt;&lt;span class="mf"&gt;.1.51.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;needed&lt;/span&gt; &lt;span class="n"&gt;by&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;EmotivResearch_2&lt;/span&gt;&lt;span class="mf"&gt;.0.0.20&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;libedk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;so&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;may&lt;/span&gt; &lt;span class="n"&gt;conflict&lt;/span&gt; &lt;span class="n"&gt;with&lt;/span&gt; &lt;span class="n"&gt;libboost_serialization&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;so&lt;/span&gt;&lt;span class="mf"&gt;.1.56.0&lt;/span&gt;
&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ld&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;warning&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;libboost_system&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;so&lt;/span&gt;&lt;span class="mf"&gt;.1.51.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;needed&lt;/span&gt; &lt;span class="n"&gt;by&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;EmotivResearch_2&lt;/span&gt;&lt;span class="mf"&gt;.0.0.20&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;libedk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;so&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;may&lt;/span&gt; &lt;span class="n"&gt;conflict&lt;/span&gt; &lt;span class="n"&gt;with&lt;/span&gt; &lt;span class="n"&gt;libboost_system&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;so&lt;/span&gt;&lt;span class="mf"&gt;.1.56.0&lt;/span&gt;
&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ld&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;warning&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;libboost_regex&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;so&lt;/span&gt;&lt;span class="mf"&gt;.1.51.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;needed&lt;/span&gt; &lt;span class="n"&gt;by&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;EmotivResearch_2&lt;/span&gt;&lt;span class="mf"&gt;.0.0.20&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;libedk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;so&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;may&lt;/span&gt; &lt;span class="n"&gt;conflict&lt;/span&gt; &lt;span class="n"&gt;with&lt;/span&gt; &lt;span class="n"&gt;libboost_regex&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;so&lt;/span&gt;&lt;span class="mf"&gt;.1.56.0&lt;/span&gt;
&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ld&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;warning&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;libboost_filesystem&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;so&lt;/span&gt;&lt;span class="mf"&gt;.1.51.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;needed&lt;/span&gt; &lt;span class="n"&gt;by&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;EmotivResearch_2&lt;/span&gt;&lt;span class="mf"&gt;.0.0.20&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;libedk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;so&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;may&lt;/span&gt; &lt;span class="n"&gt;conflict&lt;/span&gt; &lt;span class="n"&gt;with&lt;/span&gt; &lt;span class="n"&gt;libboost_filesystem&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;so&lt;/span&gt;&lt;span class="mf"&gt;.1.56.0&lt;/span&gt;
&lt;/pre&gt;


&lt;p&gt;Running the second of the former commands with -lboost_md5 added to the list of link flags produces a peculiar error even though the *.so is in one of the -L'd directories&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;g&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;EmotivResearch_2&lt;/span&gt;&lt;span class="mf"&gt;.0.0.20&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;include&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;EmotivResearch_2&lt;/span&gt;&lt;span class="mf"&gt;.0.0.20&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt; &lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;intel&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;composer_xe_2015&lt;/span&gt;&lt;span class="mf"&gt;.0.090&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;compiler&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;intel64&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;intel&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;composer_xe_2015&lt;/span&gt;&lt;span class="mf"&gt;.0.090&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;mkl&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;intel64&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;lcryptopp_64&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ludev&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;lmkl_rt&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;liomp5&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;lboost_serialization&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;lboost_system&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;lboost_md5&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;lboost_regex&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;lboost_filesystem&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;lpng12&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;lQtCore&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;lQtGui&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ledk_utils_linux&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ledk&lt;/span&gt; 
&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ld&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;cannot&lt;/span&gt; &lt;span class="n"&gt;find&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;lboost_md5&lt;/span&gt;
&lt;span class="nl"&gt;collect2:&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ld&lt;/span&gt; &lt;span class="n"&gt;returned&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;exit&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;
&lt;span class="nl"&gt;Makefile:&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;recipe&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;target&lt;/span&gt; &lt;span class="err"&gt;'&lt;/span&gt;&lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="err"&gt;'&lt;/span&gt; &lt;span class="n"&gt;failed&lt;/span&gt;
&lt;span class="nl"&gt;make:&lt;/span&gt; &lt;span class="o"&gt;***&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;Error&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/pre&gt;


&lt;p&gt;However, &lt;code&gt;ls -l /opt/EmotivResearch_2.0.0.20/lib&lt;/code&gt; shows the following output:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span class="n"&gt;total&lt;/span&gt; &lt;span class="mf"&gt;9.4&lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt;
&lt;span class="mi"&gt;104&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rwxrwxr&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;  &lt;span class="mi"&gt;500&lt;/span&gt;  &lt;span class="mi"&gt;500&lt;/span&gt; &lt;span class="mi"&gt;102&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt; &lt;span class="n"&gt;Oct&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;44&lt;/span&gt; &lt;span class="n"&gt;libboost_filesystem&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;so&lt;/span&gt;&lt;span class="mf"&gt;.1.51.0&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;
 &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rwxrwxr&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;  &lt;span class="mi"&gt;500&lt;/span&gt;  &lt;span class="mi"&gt;500&lt;/span&gt;  &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt; &lt;span class="n"&gt;Oct&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;44&lt;/span&gt; &lt;span class="n"&gt;libboost_md5&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;so&lt;/span&gt;&lt;span class="mf"&gt;.1.51.0&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="mi"&gt;952&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rwxrwxr&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;  &lt;span class="mi"&gt;500&lt;/span&gt;  &lt;span class="mi"&gt;500&lt;/span&gt; &lt;span class="mi"&gt;950&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt; &lt;span class="n"&gt;Oct&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;44&lt;/span&gt; &lt;span class="n"&gt;libboost_regex&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;so&lt;/span&gt;&lt;span class="mf"&gt;.1.51.0&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="mi"&gt;464&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rwxrwxr&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;  &lt;span class="mi"&gt;500&lt;/span&gt;  &lt;span class="mi"&gt;500&lt;/span&gt; &lt;span class="mi"&gt;461&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt; &lt;span class="n"&gt;Oct&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;44&lt;/span&gt; &lt;span class="n"&gt;libboost_serialization&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;so&lt;/span&gt;&lt;span class="mf"&gt;.1.51.0&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;
 &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rwxrwxr&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;  &lt;span class="mi"&gt;500&lt;/span&gt;  &lt;span class="mi"&gt;500&lt;/span&gt;  &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt; &lt;span class="n"&gt;Oct&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;44&lt;/span&gt; &lt;span class="n"&gt;libboost_system&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;so&lt;/span&gt;&lt;span class="mf"&gt;.1.51.0&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;
   &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;lrwxrwxrwx&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;  &lt;span class="mi"&gt;500&lt;/span&gt;  &lt;span class="mi"&gt;500&lt;/span&gt;   &lt;span class="mi"&gt;18&lt;/span&gt; &lt;span class="n"&gt;Jul&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;  &lt;span class="mi"&gt;2013&lt;/span&gt; &lt;span class="n"&gt;libcryptopp_64&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;so&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;libcryptopp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;so&lt;/span&gt;&lt;span class="mf"&gt;.1.0&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;
   &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;lrwxrwxrwx&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;  &lt;span class="mi"&gt;500&lt;/span&gt;  &lt;span class="mi"&gt;500&lt;/span&gt;   &lt;span class="mi"&gt;17&lt;/span&gt; &lt;span class="n"&gt;Jul&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;  &lt;span class="mi"&gt;2013&lt;/span&gt; &lt;span class="n"&gt;libcryptopp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;so&lt;/span&gt;&lt;span class="mf"&gt;.1&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;libcryptopp_64&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;so&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="mf"&gt;4.8&lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rwxr&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;xr&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;  &lt;span class="mi"&gt;500&lt;/span&gt;  &lt;span class="mi"&gt;500&lt;/span&gt; &lt;span class="mf"&gt;4.8&lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt; &lt;span class="n"&gt;Oct&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;44&lt;/span&gt; &lt;span class="n"&gt;libcryptopp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;so&lt;/span&gt;&lt;span class="mf"&gt;.1.0&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;
   &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;lrwxrwxrwx&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;  &lt;span class="mi"&gt;500&lt;/span&gt;  &lt;span class="mi"&gt;500&lt;/span&gt;   &lt;span class="mi"&gt;15&lt;/span&gt; &lt;span class="n"&gt;Jul&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;  &lt;span class="mi"&gt;2013&lt;/span&gt; &lt;span class="n"&gt;libedk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;so&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;libedk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;so&lt;/span&gt;&lt;span class="mf"&gt;.1.0.0&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;
   &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;lrwxrwxrwx&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;  &lt;span class="mi"&gt;500&lt;/span&gt;  &lt;span class="mi"&gt;500&lt;/span&gt;   &lt;span class="mi"&gt;15&lt;/span&gt; &lt;span class="n"&gt;Jul&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;  &lt;span class="mi"&gt;2013&lt;/span&gt; &lt;span class="n"&gt;libedk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;so&lt;/span&gt;&lt;span class="mf"&gt;.1&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;libedk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;so&lt;/span&gt;&lt;span class="mf"&gt;.1.0.0&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;
   &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;lrwxrwxrwx&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;  &lt;span class="mi"&gt;500&lt;/span&gt;  &lt;span class="mi"&gt;500&lt;/span&gt;   &lt;span class="mi"&gt;15&lt;/span&gt; &lt;span class="n"&gt;Jul&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;  &lt;span class="mi"&gt;2013&lt;/span&gt; &lt;span class="n"&gt;libedk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;so&lt;/span&gt;&lt;span class="mf"&gt;.1.0&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;libedk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;so&lt;/span&gt;&lt;span class="mf"&gt;.1.0.0&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="mf"&gt;3.1&lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rwxrwxr&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;  &lt;span class="mi"&gt;500&lt;/span&gt;  &lt;span class="mi"&gt;500&lt;/span&gt; &lt;span class="mf"&gt;3.1&lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt; &lt;span class="n"&gt;Oct&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;44&lt;/span&gt; &lt;span class="n"&gt;libedk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;so&lt;/span&gt;&lt;span class="mf"&gt;.1.0.0&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="mf"&gt;4.0&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rwxrwxrwx&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;  &lt;span class="mi"&gt;500&lt;/span&gt;  &lt;span class="mi"&gt;500&lt;/span&gt; &lt;span class="mf"&gt;3.8&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt; &lt;span class="n"&gt;Oct&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;44&lt;/span&gt; &lt;span class="n"&gt;libedk_utils_linux&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;so&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;
   &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;lrwxrwxrwx&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt;   &lt;span class="mi"&gt;19&lt;/span&gt; &lt;span class="n"&gt;Oct&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;44&lt;/span&gt; &lt;span class="n"&gt;libqwt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;so&lt;/span&gt;&lt;span class="mf"&gt;.5&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;libqwt5&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;so&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;
   &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;lrwxrwxrwx&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt;   &lt;span class="mi"&gt;15&lt;/span&gt; &lt;span class="n"&gt;Oct&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;44&lt;/span&gt; &lt;span class="n"&gt;libudev&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;so&lt;/span&gt;&lt;span class="mf"&gt;.0&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;libudev&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;so&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;
   &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;lrwxrwxrwx&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt;   &lt;span class="mi"&gt;12&lt;/span&gt; &lt;span class="n"&gt;Oct&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;27&lt;/span&gt; &lt;span class="n"&gt;libudev&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;so&lt;/span&gt;&lt;span class="mf"&gt;.1&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;libudev&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;so&lt;/span&gt;&lt;span class="mf"&gt;.0&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;
&lt;/pre&gt;


&lt;p&gt;I initially shrugged off the output warnings that ld gave me until I tried connecting the test program to the EmoComposer. It crashed because it couldn't find the reference to libboost_md5&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span class="nx"&gt;GNU&lt;/span&gt; &lt;span class="nx"&gt;gdb&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;GDB&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="mf"&gt;7.8&lt;/span&gt;
&lt;span class="nx"&gt;Copyright&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;C&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="mi"&gt;2014&lt;/span&gt; &lt;span class="nx"&gt;Free&lt;/span&gt; &lt;span class="nx"&gt;Software&lt;/span&gt; &lt;span class="nx"&gt;Foundation&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Inc.&lt;/span&gt;
&lt;span class="nx"&gt;License&lt;/span&gt; &lt;span class="nx"&gt;GPLv3&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;GNU&lt;/span&gt; &lt;span class="nx"&gt;GPL&lt;/span&gt; &lt;span class="nb"&gt;version&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="nx"&gt;later&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//gnu.org/licenses/gpl.html&amp;gt;&lt;/span&gt;
&lt;span class="nx"&gt;This&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="nx"&gt;free&lt;/span&gt; &lt;span class="nx"&gt;software&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;you&lt;/span&gt; &lt;span class="nx"&gt;are&lt;/span&gt; &lt;span class="nx"&gt;free&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;change&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="nx"&gt;redistribute&lt;/span&gt; &lt;span class="nx"&gt;it.&lt;/span&gt;
&lt;span class="nx"&gt;There&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="nx"&gt;NO&lt;/span&gt; &lt;span class="nx"&gt;WARRANTY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;extent&lt;/span&gt; &lt;span class="nx"&gt;permitted&lt;/span&gt; &lt;span class="k"&gt;by&lt;/span&gt; &lt;span class="nx"&gt;law.&lt;/span&gt;  &lt;span class="k"&gt;Type&lt;/span&gt; &lt;span class="s2"&gt;"show copying"&lt;/span&gt;
&lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="s2"&gt;"show warranty"&lt;/span&gt; &lt;span class="nb"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;details.&lt;/span&gt;
&lt;span class="nx"&gt;This&lt;/span&gt; &lt;span class="nx"&gt;GDB&lt;/span&gt; &lt;span class="nx"&gt;was&lt;/span&gt; &lt;span class="nx"&gt;configured&lt;/span&gt; &lt;span class="nx"&gt;as&lt;/span&gt; &lt;span class="s2"&gt;"x86_64-unknown-linux-gnu"&lt;/span&gt;&lt;span class="nx"&gt;.&lt;/span&gt;
&lt;span class="k"&gt;Type&lt;/span&gt; &lt;span class="s2"&gt;"show configuration"&lt;/span&gt; &lt;span class="nb"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;configuration&lt;/span&gt; &lt;span class="nx"&gt;details.&lt;/span&gt;
&lt;span class="nb"&gt;For&lt;/span&gt; &lt;span class="nx"&gt;bug&lt;/span&gt; &lt;span class="nx"&gt;reporting&lt;/span&gt; &lt;span class="nx"&gt;instructions&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;please&lt;/span&gt; &lt;span class="nx"&gt;see&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//www.gnu.org/software/gdb/bugs/&amp;gt;.&lt;/span&gt;
&lt;span class="nb"&gt;Find&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;GDB&lt;/span&gt; &lt;span class="nx"&gt;manual&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="nx"&gt;other&lt;/span&gt; &lt;span class="nx"&gt;documentation&lt;/span&gt; &lt;span class="nb"&gt;resources&lt;/span&gt; &lt;span class="nx"&gt;online&lt;/span&gt; &lt;span class="nx"&gt;at&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//www.gnu.org/software/gdb/documentation/&amp;gt;.&lt;/span&gt;
&lt;span class="nb"&gt;For&lt;/span&gt; &lt;span class="nx"&gt;help&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;type&lt;/span&gt; &lt;span class="s2"&gt;"help"&lt;/span&gt;&lt;span class="nx"&gt;.&lt;/span&gt;
&lt;span class="k"&gt;Type&lt;/span&gt; &lt;span class="s2"&gt;"apropos word"&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="nb"&gt;search&lt;/span&gt; &lt;span class="nb"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;commands&lt;/span&gt; &lt;span class="nx"&gt;related&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="s2"&gt;"word"&lt;/span&gt;&lt;span class="nx"&gt;...&lt;/span&gt;
&lt;span class="nx"&gt;Reading&lt;/span&gt; &lt;span class="nx"&gt;symbols&lt;/span&gt; &lt;span class="nb"&gt;from&lt;/span&gt; &lt;span class="nx"&gt;env...&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;no&lt;/span&gt; &lt;span class="nx"&gt;debugging&lt;/span&gt; &lt;span class="nx"&gt;symbols&lt;/span&gt; &lt;span class="nx"&gt;found&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nx"&gt;...done.&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;gdb&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nb"&gt;run&lt;/span&gt; &lt;span class="n"&gt;LD_LIBRARY_PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;opt&lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;EmotivResearch_2.0.0.20&lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;lib&lt;/span&gt; &lt;span class="nx"&gt;.&lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="na"&gt;-bin&lt;/span&gt;
&lt;span class="nx"&gt;Starting&lt;/span&gt; &lt;span class="nx"&gt;program&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;usr&lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;bin&lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="nb"&gt;env&lt;/span&gt; &lt;span class="n"&gt;LD_LIBRARY_PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;opt&lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;EmotivResearch_2.0.0.20&lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;lib&lt;/span&gt; &lt;span class="nx"&gt;.&lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="na"&gt;-bin&lt;/span&gt;
&lt;span class="nx"&gt;Got&lt;/span&gt; &lt;span class="nb"&gt;object&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt; &lt;span class="nb"&gt;from&lt;/span&gt; &lt;span class="nx"&gt;memory&lt;/span&gt; &lt;span class="nx"&gt;but&lt;/span&gt; &lt;span class="nx"&gt;can&lt;/span&gt;&lt;span class="s1"&gt;'t read symbols: File truncated.&lt;/span&gt;
&lt;span class="s1"&gt;warning: Could not load shared library symbols for linux-vdso.so.1.&lt;/span&gt;
&lt;span class="s1"&gt;Do you need "set solib-search-path" or "set sysroot"?&lt;/span&gt;
&lt;span class="s1"&gt;process 7092 is executing new program: /home/shadowkyogre/School/csce499a/test-proggy/test-bin&lt;/span&gt;
&lt;span class="s1"&gt;warning: Could not load shared library symbols for linux-vdso.so.1.&lt;/span&gt;
&lt;span class="s1"&gt;Do you need "set solib-search-path" or "set sysroot"?&lt;/span&gt;
&lt;span class="s1"&gt;warning: the debug information found in "/opt/intel/composer_xe_2015.0.090/compiler/lib/intel64/libiomp5.dbg" does not match "/opt/intel/composer_xe_2015.0.090/compiler/lib/intel64/libiomp5.so" (CRC mismatch).&lt;/span&gt;

&lt;span class="s1"&gt;[Thread debugging using libthread_db enabled]&lt;/span&gt;
&lt;span class="s1"&gt;Using host libthread_db library "/usr/lib/libthread_db.so.1".&lt;/span&gt;
&lt;span class="s1"&gt;===================================================================&lt;/span&gt;
&lt;span class="s1"&gt;Example to show how to log the EmoState from EmoEngine/EmoComposer.&lt;/span&gt;
&lt;span class="s1"&gt;===================================================================&lt;/span&gt;
&lt;span class="s1"&gt;Press '&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="s1"&gt;' to start and connect to the EmoEngine                    &lt;/span&gt;
&lt;span class="s1"&gt;Press '&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="s1"&gt;' to connect to the EmoComposer                            &lt;/span&gt;
&lt;span class="s1"&gt;&amp;gt;&amp;gt; 2&lt;/span&gt;
&lt;span class="s1"&gt;[New Thread 0x7fffed887700 (LWP 7097)]&lt;/span&gt;
&lt;span class="s1"&gt;Start receiving EmoState! Press any key to stop logging...&lt;/span&gt;


&lt;span class="s1"&gt;Program received signal SIGSEGV, Segmentation fault.&lt;/span&gt;
&lt;span class="s1"&gt;[Switching to Thread 0x7fffed887700 (LWP 7097)]&lt;/span&gt;
&lt;span class="s1"&gt;0x00007ffff4a214c7 in void EmoEventPackage::serialize&amp;lt;boost::archive::text_iarchive&amp;gt;(boost::archive::text_iarchive&amp;amp;, unsigned int) () from /opt/EmotivResearch_2.0.0.20/lib/libedk.so.1&lt;/span&gt;
&lt;span class="s1"&gt;(gdb) bt&lt;/span&gt;
&lt;span class="s1"&gt;#0  0x00007ffff4a214c7 in void EmoEventPackage::serialize&amp;lt;boost::archive::text_iarchive&amp;gt;(boost::archive::text_iarchive&amp;amp;, unsigned int) () from /opt/EmotivResearch_2.0.0.20/lib/libedk.so.1&lt;/span&gt;
&lt;span class="s1"&gt;#1  0x00007ffff6a221d5 in boost::archive::detail::basic_iarchive::load_object(void*, boost::archive::detail::basic_iserializer const&amp;amp;) () from /usr/lib/libboost_serialization.so.1.56.0&lt;/span&gt;
&lt;span class="s1"&gt;#2  0x00007ffff4a1ffd9 in void SerializedObjectConnection::handle_read_data&amp;lt;EmoEventPackage, boost::_bi::bind_t&amp;lt;void, boost::_mfi::mf1&amp;lt;void, RemoteEmoEventClient, boost::system::error_code const&amp;amp;&amp;gt;, boost::_bi::list2&amp;lt;boost::_bi::value&amp;lt;RemoteEmoEventClient*&amp;gt;, boost::arg&amp;lt;1&amp;gt; (*)()&amp;gt; &amp;gt; &amp;gt;(boost::system::error_code const&amp;amp;, EmoEventPackage&amp;amp;, boost::tuples::tuple&amp;lt;boost::_bi::bind_t&amp;lt;void, boost::_mfi::mf1&amp;lt;void, RemoteEmoEventClient, boost::system::error_code const&amp;amp;&amp;gt;, boost::_bi::list2&amp;lt;boost::_bi::value&amp;lt;RemoteEmoEventClient*&amp;gt;, boost::arg&amp;lt;1&amp;gt; (*)()&amp;gt; &amp;gt;, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type&amp;gt;) ()&lt;/span&gt;
&lt;span class="s1"&gt;   from /opt/EmotivResearch_2.0.0.20/lib/libedk.so.1&lt;/span&gt;
&lt;span class="s1"&gt;#3  0x00007ffff4a297c9 in boost::asio::detail::read_op&amp;lt;boost::asio::basic_stream_socket&amp;lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&amp;lt;boost::asio::ip::tcp&amp;gt; &amp;gt;, boost::asio::mutable_buffers_1, boost::asio::detail::transfer_all_t, boost::_bi::bind_t&amp;lt;void, boost::_mfi::mf3&amp;lt;void, SerializedObjectConnection, boost::system::error_code const&amp;amp;, EmoEventPackage&amp;amp;, boost::tuples::tuple&amp;lt;boost::_bi::bind_t&amp;lt;void, boost::_mfi::mf1&amp;lt;void, RemoteEmoEventClient, boost::system::error_code const&amp;amp;&amp;gt;, boost::_bi::list2&amp;lt;boost::_bi::value&amp;lt;RemoteEmoEventClient*&amp;gt;, boost::arg&amp;lt;1&amp;gt; (*)()&amp;gt; &amp;gt;, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type&amp;gt; &amp;gt;, boost::_bi::list4&amp;lt;boost::_bi::value&amp;lt;SerializedObjectConnection*&amp;gt;, boost::arg&amp;lt;1&amp;gt; (*)(), boost::reference_wrapper&amp;lt;EmoEventPackage&amp;gt;, boost::_bi::value&amp;lt;boost::tuples::tuple&amp;lt;boost::_bi::bind_t&amp;lt;void, boost::_mfi::mf1&amp;lt;void, RemoteEmoEventClient, boost::system::error_code const&amp;amp;&amp;gt;, boost::_bi::list2&amp;lt;boost::_bi::value&amp;lt;RemoteEmoEventClient*&amp;gt;, boost::arg&amp;lt;1&amp;gt; (*)()&amp;gt; &amp;gt;, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type&amp;gt; &amp;gt; &amp;gt; &amp;gt; &amp;gt;::operator()(boost::system::error_code const&amp;amp;, unsigned long, int) () from /opt/EmotivResearch_2.0.0.20/lib/libedk.so.1&lt;/span&gt;
&lt;span class="s1"&gt;#4  0x00007ffff4a29e02 in boost::asio::detail::reactive_socket_recv_op&amp;lt;boost::asio::mutable_buffers_1, boost::asio::detail::read_op&amp;lt;boost::asio::basic_stream_socket&amp;lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&amp;lt;boost::asio::ip::tcp&amp;gt; &amp;gt;, boost::asio::mutable_buffers_1, boost::asio::detail::transfer_all_t, boost::_bi::bind_t&amp;lt;void, boost::_mfi::mf3&amp;lt;void, SerializedObjectConnection, boost::system::error_code const&amp;amp;, EmoEventPackage&amp;amp;, boost::tuples::tuple&amp;lt;boost::_bi::bind_t&amp;lt;void, boost::_mfi::mf1&amp;lt;void, RemoteEmoEventClient, boost::system::error_code const&amp;amp;&amp;gt;, boost::_bi::list2&amp;lt;boost::_bi::value&amp;lt;RemoteEmoEventClient*&amp;gt;, boost::arg&amp;lt;1&amp;gt; (*)()&amp;gt; &amp;gt;, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type&amp;gt; &amp;gt;, boost::_bi::list4&amp;lt;boost::_bi::value&amp;lt;SerializedObjectConnection*&amp;gt;, boost::arg&amp;lt;1&amp;gt; (*)(), boost::reference_wrapper&amp;lt;EmoEventPackage&amp;gt;, boost::_bi::value&amp;lt;boost::tuples::tuple&amp;lt;boost::_bi::bind_t&amp;lt;void, boost::_mfi::mf1&amp;lt;void, RemoteEmoEventClient, boost::system::error_code const&amp;amp;&amp;gt;, boost::_bi::list2&amp;lt;boost::_bi::value&amp;lt;RemoteEmoEventClient*&amp;gt;, boost::arg&amp;lt;1&amp;gt; (*)()&amp;gt; &amp;gt;, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type&amp;gt; &amp;gt; &amp;gt; &amp;gt; &amp;gt; &amp;gt;::do_complete(boost::asio::detail::task_io_service*, boost::asio::detail::task_io_service_operation*, boost::system::error_code const&amp;amp;, unsigned long) () from /opt/EmotivResearch_2.0.0.20/lib/libedk.so.1&lt;/span&gt;
&lt;span class="s1"&gt;#5  0x00007ffff4a2ac3c in boost::asio::detail::task_io_service::run(boost::system::error_code&amp;amp;) () from /opt/EmotivResearch_2.0.0.20/lib/libedk.so.1&lt;/span&gt;
&lt;span class="s1"&gt;#6  0x00007ffff4a18094 in RemoteEmoEventClient::run() () from /opt/EmotivResearch_2.0.0.20/lib/libedk.so.1&lt;/span&gt;
&lt;span class="s1"&gt;#7  0x00007ffff4a084e9 in Emotiv::EmotivThreadProc(void*) () from /opt/EmotivResearch_2.0.0.20/lib/libedk.so.1&lt;/span&gt;
&lt;span class="s1"&gt;#8  0x00007ffff3a14314 in start_thread () from /usr/lib/libpthread.so.0&lt;/span&gt;
&lt;span class="s1"&gt;#9  0x00007ffff3d113ed in clone () from /usr/lib/libc.so.6&lt;/span&gt;
&lt;span class="s1"&gt;(gdb) quit&lt;/span&gt;
&lt;span class="s1"&gt;A debugging session is active.&lt;/span&gt;

&lt;span class="s1"&gt;    Inferior 1 [process 7092] will be killed.&lt;/span&gt;

&lt;span class="s1"&gt;Quit anyway? (y or n) y&lt;/span&gt;
&lt;/pre&gt;


&lt;p&gt;At least we can still write a rudimentary AI while trying to figure out why g++ isn't picking up the libboost_md5 from the Emotiv SDK tarball.&lt;/p&gt;&lt;/div&gt;</description><category>compiling troubles</category><category>emotiv</category><category>linux</category><category>sdk</category><category>test program</category><guid>/posts/test-edk-program-mostly-compiles-so-far/</guid><pubDate>Mon, 17 Nov 2014 03:09:36 GMT</pubDate></item><item><title>Installing Arch Linux in the Morken 212A Lab</title><link>/posts/installing-arch-linux-in-the-morken-212a-lab/</link><dc:creator>phora</dc:creator><description>&lt;div&gt;&lt;p&gt;This took a while to document since I spread the installation out over three days (Monday, Tuesday, and Thursday specifically). The first few hours were spent trying to figure out why the &lt;br&gt;
LiveUSB's Arch Linux installer wouldn't boot. After inspecting the specs for all of the desktops, turns out it was just the computers' fault. The rest of the time was spent waiting for the packages to finish installing. The reason why we installed Arch Linux on these computers was:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Ready access to the software we need (Arduino SDK and several dependencies for the Emotiv EPOC SDK) through the AUR&lt;/li&gt;
&lt;li&gt;phora has experience with Arch Linux packaging since she has an Arch Linux desktop&lt;/li&gt;
&lt;li&gt;It is easy to install only the packages needed&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;And the packages and packages we installed on the machines were:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;base{,-devel} - Required for all Arch Linux machines. base-devel is an assumed prerequisite for using the AUR.&lt;/li&gt;
&lt;li&gt;kdebase - Easy to set up, ultra-customizable GUI&lt;/li&gt;
&lt;li&gt;kdegraphics-{gwenview,okular} - Basic needs (image viewing, pdf viewing)&lt;/li&gt;
&lt;li&gt;gimp - For editing our concept art&lt;/li&gt;
&lt;li&gt;dia - For editing our concept diagrams&lt;/li&gt;
&lt;li&gt;android-sdk{,-platform-tools} - In case we need to develop any android applications&lt;/li&gt;
&lt;li&gt;eclipse-android - In case we need to develop any android applications&lt;/li&gt;
&lt;li&gt;arduino - To start programming basic functionality in the robot&lt;/li&gt;
&lt;li&gt;qtcurve - To keep all GUI widget themes consistent (this is important for the accessibility problems mentioned in &lt;a href="/posts/emotiv-epoc-sdk-experiments/"&gt;Emotiv EPOC SDK Experiments&lt;/a&gt;). Also makes changing the color and styling without much technical knowhow.&lt;/li&gt;
&lt;li&gt;kde-gtk-config - To keep all GUI widget themes consistent (this is important for the accessibility problems mentioned in &lt;a href="/posts/emotiv-epoc-sdk-experiments/"&gt;Emotiv EPOC SDK Experiments&lt;/a&gt;). Also makes changing the color and styling without much technical knowhow.&lt;/li&gt;
&lt;li&gt;firefox - Basic needs (browsing)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In other news, an email just came in on 2014-11-07 stating that there was an unexpected turn of circumstances that provided. I applied for the refund, especially since we need the tests to be as early as possible. This will mean we have to look at alternate hardware while waiting for it to come in and/or develop any demo code for the EEG device earlier than expected (since the shipments are still applicable even after the refunds).&lt;/p&gt;&lt;/div&gt;</description><category>arch linux</category><category>emotiv</category><category>faculty meeting</category><category>group meeting</category><category>linux</category><category>workspace preparation</category><guid>/posts/installing-arch-linux-in-the-morken-212a-lab/</guid><pubDate>Tue, 04 Nov 2014 03:22:30 GMT</pubDate></item><item><title>Advisor Meeting 2</title><link>/posts/advisor-meeting-2/</link><dc:creator>phora</dc:creator><description>&lt;div&gt;&lt;p&gt;We met with our advisor today from 10:20-10:50 and reported our progress.  Here were the major points of the meeting:&lt;/p&gt;
&lt;h2 id="joan"&gt;Joan&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Had to work on the Requirements Document mostly on own during the weekend (and likely for next week too).&lt;/li&gt;
&lt;li&gt;Concerned about how the use cases mention AndroidEEG&lt;ul&gt;
&lt;li&gt;Draw the storyboards for the use cases without the Android app for the presentation. Including the Android app in the storyboards gives the illusion that Android middleman software will be essential to the functioning of the program.&lt;/li&gt;
&lt;li&gt;Using the 1Sheeld may reduce the amount of Android code needed.&lt;/li&gt;
&lt;li&gt;Keep it as optional in case the middleman software makes it easier to write the code.&lt;/li&gt;
&lt;li&gt;Write the use cases to optionally communicate with the 1sheeld for debugging purposes.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Found the data faker program in the Emotiv Epoc SDK (the binary's EmoComposer). Further comments about EmoComposer are in the &lt;a href="/posts/emotiv-epoc-sdk-experiments/"&gt;experiments&lt;/a&gt; post.&lt;/li&gt;
&lt;li&gt;Can the data faker program be hooked up to the robot? That would be handy to debug the robot in case the headset readings get funky.&lt;/li&gt;
&lt;li&gt;Set up the presentation permissions for our advisor ASAP.&lt;ul&gt;
&lt;li&gt;Meet with the advisor again (likely on own) at approximately 09:30 on 2014-10-28&lt;/li&gt;
&lt;li&gt;Since we'll need a decent draft of our presentation to show to our advisor, pretend that the presentation is due on Tuesday.&lt;/li&gt;
&lt;li&gt;Further comments on the presentation will be emailed.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="personal-notes-thatre-related-to-the-meeting"&gt;Personal notes that're related to the meeting&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The theme for the website could be updated. It looks a little plain compared to &lt;a href="http://phora.github.io"&gt;my personal site&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Start learning about how heuristic functions are used in AI.&lt;/li&gt;
&lt;li&gt;Look at the &lt;a href="http://numenta.org/nupic.html"&gt;Numenta NUPIC code&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;I should probably enable some form of commenting system on the blog. Will do so now.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="drew"&gt;Drew&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Unavailable for the meeting due to external circumstances.&lt;/li&gt;
&lt;li&gt;Checked up on the robot parts that came in the mail just in case anything happened to them.&lt;/li&gt;
&lt;li&gt;Ordered an LED(?) screen to get the free shipping. May come in handy later.&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</description><category>emotiv</category><category>faculty meeting</category><category>linux</category><category>presentation</category><category>requirements</category><category>robot</category><category>robot parts</category><category>sdk</category><guid>/posts/advisor-meeting-2/</guid><pubDate>Mon, 27 Oct 2014 18:24:15 GMT</pubDate></item><item><title>Emotiv EPOC SDK Experiments</title><link>/posts/emotiv-epoc-sdk-experiments/</link><dc:creator>phora</dc:creator><description>&lt;div&gt;&lt;p&gt;So I started playing around with the SDK and the SDK's provided tools. I've kept some &lt;a href="/galleries/Emotiv_EPOC_SDK/"&gt;screenshots&lt;/a&gt; to highlight some of the usability problems I encountered. The first two screenshots highlight aesthetic usability issues in EmoComposer since it tries to stick out with its widgets. The same could be said for the EmotivControlPanel, which also sticks out due to the custom styling on the buttons and other widgets. While I do have experience with writing &lt;a href="http://qt-project.org/doc/qt-4.8/stylesheet.html"&gt;Qt Style Sheets&lt;/a&gt; and the EmotivControlPanel even supports loading a custom stylesheet, this functionality is useless without documenting the widgets used to construct the interface. I'd recommend the Emotiv developers document what widgets the users need to write the stylesheets for for their SDK tools and/or remove all custom styling except for the custom widgets should they stick with a proprietary model. Personally, I'd prefer a combination of both so the Emotiv developers can keep their custom styling with a stylesheet, but allow the users to turn this off in case they can't easily read the interface.&lt;/p&gt;
&lt;p&gt;Other than that, the EmotivControlPanel works just as expected when tested with the EmoComposer, even though I frequently confused the "Push Skill" slider with carrying out the "Push" outside of training mode for the Affectiv Suite. The documentation does not mention that the EmoComposer can't save user profiles to it. Trying to do so will cause the EmotivControlPanel to freeze, requiring the user to manually kill the application.&lt;/p&gt;
&lt;p&gt;Surprisingly, the EmoKey and the TestBench software don't stick out as much. The only issues I encountered with it were not triggering when the blink button was pressed in EmoComposer, not fully closing even after "Quit" is clicked on the system tray (which again, requires the application to be killed manually), and not launching keybindings such as Alt+F3 (which brings up the window management menu for me) and Ctrl+Space (which launches Kupfer). Even with the QListView's row coloring, the custom colors are done correctly since it defines both a foreground color and a background color. This makes the software more accessible to people with unusual color schemes.&lt;/p&gt;
&lt;p&gt;I haven't been able to test the TestBench software since it has no ability to connect with the EmoComposer. Hopefully this'll change in the future, but I don't know what changes will be necessary to do this. At least it closes properly when Application → Quit is selected.&lt;/p&gt;
&lt;p&gt;I will also be documenting any experiences I have with Emotiv's developers in the future. So far, the support's been pretty responsive.&lt;/p&gt;&lt;/div&gt;</description><category>emotiv</category><category>linux</category><category>sdk</category><category>usability</category><guid>/posts/emotiv-epoc-sdk-experiments/</guid><pubDate>Sun, 26 Oct 2014 21:58:12 GMT</pubDate></item><item><title>Ordering Robot Parts</title><link>/posts/ordering-robot-parts/</link><dc:creator>pengor</dc:creator><description>&lt;div&gt;&lt;p&gt;On Tuesday we ordered the first set of parts for the robot from &lt;a href="https://www.sparkfun.com/"&gt;SparkFun Electronics&lt;/a&gt;, enough to get the robot moving. The only necessary component that we didn't purchase was an Arduino microcontroller, which we already have in our possession. Along with this board we went with a fairly basic robot design favoring simplicity when possible. The order consisted of:&lt;br&gt;
* 1 &lt;a href="https://www.sparkfun.com/products/12089"&gt;Multi-Chassis - 4WD Kit (Basic)&lt;/a&gt; - A rectangular chassis that has four independently-motorized wheels&lt;br&gt;
* 2 &lt;a href="https://www.sparkfun.com/products/9457"&gt;Motor Driver 1A Dual TB6612FNG&lt;/a&gt; - The intermediaries between the microcontroller (essentially the robot's brain) and the motors&lt;br&gt;
* 1 &lt;a href="https://www.sparkfun.com/products/12999"&gt;5 Pack of 5mm Addressable RGB LEDs&lt;/a&gt; - These will be used for debugging and user-feedback, different colors representing different messages&lt;br&gt;
* 1 &lt;a href="https://www.sparkfun.com/products/710"&gt;Graphic LCD 128x64&lt;/a&gt; - Mostly just tacked this on to get free shipping, but it could wind up in the project if we want another form of output&lt;/p&gt;
&lt;p&gt;We're excited to get working on the hardware, but first up is preparing for our requirements presentation on next Thursday!&lt;/p&gt;&lt;/div&gt;</description><category>emotiv</category><category>faculty meeting</category><category>linux</category><category>nikola</category><category>requirements</category><category>robot</category><category>robot parts</category><category>sdk</category><guid>/posts/ordering-robot-parts/</guid><pubDate>Thu, 23 Oct 2014 23:40:58 GMT</pubDate></item><item><title>Advisor Meeting 1</title><link>/posts/advisor-meeting-1/</link><dc:creator>phora</dc:creator><description>&lt;div&gt;&lt;p&gt;We met with our advisor today from 10:20-10:50 and reported our progress. Here were the major points of the meeting:&lt;/p&gt;
&lt;h2 id="joan"&gt;Joan&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Packaged the Fedora version of the Research SDK for Arch Linux.&lt;/li&gt;
&lt;li&gt;Found the most of the dependencies for the SDK. Still don't know what package provides libmkl_rt.&lt;/li&gt;
&lt;li&gt;Emailed the support team about the packaging of the SDK so the developer team could fix this.&lt;/li&gt;
&lt;li&gt;There's a fake data generator in the SDK lite for Windows and Mac (That's free!). So try to find the equivalent in the Linux SDK version.&lt;/li&gt;
&lt;li&gt;Finish work on not referencing the static copies of the library when possible.&lt;/li&gt;
&lt;li&gt;Found a bug in nikola\plugins\task\sitemap__init__.py. It wasn't checking if directories were directories in a cross-platform manner. Will report this to the developers with an official patch.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="drew"&gt;Drew&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Order the parts from SparkFun.&lt;/li&gt;
&lt;li&gt;Chassis has built in motors.&lt;/li&gt;
&lt;li&gt;We may need a separate shield for driving the wheels?&lt;/li&gt;
&lt;li&gt;Probably going to drive the motors with DC.&lt;/li&gt;
&lt;li&gt;Settled on multicolor LEDs because single color LEDs can get confusing for debugging.&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</description><category>emotiv</category><category>faculty meeting</category><category>linux</category><category>nikola</category><category>requirements</category><category>robot</category><category>robot parts</category><category>sdk</category><guid>/posts/advisor-meeting-1/</guid><pubDate>Mon, 20 Oct 2014 17:59:13 GMT</pubDate></item><item><title>Installing the Emotiv SDK</title><link>/posts/installing-the-emotiv-sdk/</link><dc:creator>phora</dc:creator><description>&lt;div&gt;&lt;p&gt;So we ordered the device this Saturday after the scholarship money came in... which'll take about two weeks from today. In the mean time, Joan downloaded the SDK to see how it's installed. Judging by a certain &lt;a href="http://emotiv.co/forum/messages/forum15/topic3749/message17131/?sphrase_id=7902#message17131"&gt;forum post on Emotiv's forums&lt;/a&gt;, I wasn't the only one shocked by how they provided the packaging. They provided an installer that downloads an installer to do the actual installer in an unsafe manner. Thankfully I knew enough about packaging to wrap it up in a much saner manner. You can find the PKGBUILD &lt;a href="https://github.com/RoboBrainz/Emotiv-Epoc-SDK-PKGBUILDs"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;On my list of things to do is to minimize the references to extra copies of the libraries as much as possible. Second on my list of things to do is to make a proper *.spec file for Fedora installs.&lt;/p&gt;&lt;/div&gt;</description><category>PKGBUILD</category><category>emotiv</category><category>linux</category><category>please package properly</category><category>requirements</category><category>sdk</category><guid>/posts/installing-the-emotiv-sdk/</guid><pubDate>Sat, 18 Oct 2014 19:20:54 GMT</pubDate></item></channel></rss>